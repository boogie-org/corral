name: Corral CI

on: [push, pull_request, workflow_dispatch]

env:
  SOLUTION: source/Corral.sln
  AVSOLUTION: source/av.sln
  BOOGIESOLUTION: boogie/Source/Boogie.sln
  Z3URL: https://github.com/Z3Prover/z3/releases/download/z3-4.8.8/z3-4.8.8-x64-ubuntu-16.04.zip

jobs:
  job0:
    name: Corral CI
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Checkout Corral
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'true'
      - name: Install tools, build Corral, build Angelic Verifier
        run: |
          # Download a Z3 release
          wget ${Z3URL}
          unzip z3*.zip
          # Change directory to Corral root folder
          cd $GITHUB_WORKSPACE
          # Restore dotnet tools
          dotnet tool restore
          # Build custom Boogie
          dotnet build ${BOOGIESOLUTION}
          # Build Corral
          dotnet build -c ${{ matrix.configuration }} ${SOLUTION}
          # Build Angelic Verifier
          dotnet build -c ${{ matrix.configuration }} ${AVSOLUTION}
      - name: Test Corral
        run: |
          export PATH="$(find $PWD/z3* -name bin -type d):$PATH"
          cd $GITHUB_WORKSPACE
          export CONFIGURATION=${{ matrix.configuration }}
          (cd test/regression && perl check.pl)
      - name: Test Fwdbck
        run: |
          export PATH="$(find $PWD/z3* -name bin -type d):$PATH"
          cd $GITHUB_WORKSPACE
          export CONFIGURATION=${{ matrix.configuration }}
          (cd test/fwdbck && perl checkNSIFB.pl)
      - name: Test AliasAnalysis
        run: |
          export PATH="$(find $PWD/z3* -name bin -type d):$PATH"
          cd $GITHUB_WORKSPACE/test/AliasAnalysis
          ./run.sh ${{ matrix.configuration }}
      - name: Test Angelic Verifier
        run: |
          export PATH="$(find $PWD/z3* -name bin -type d):$PATH"
          cd $GITHUB_WORKSPACE/test/av-regressions
          ./run.sh ${{ matrix.configuration }}
